module syntax-forms
language QL
start symbol Start

test empty form [[
  form empty {}
]] parse succeeds

test other empty form [[
  form other {
  }
]] parse to Form("other", [])

test nonempty form [[
  form nonempty {
	  question : "Label" boolean		
  }
]] parse to 
   Form("nonempty", [
     Question("question", Label("\"Label\""), BoolTy())
   ])

test only one form [[
	form one {}
	form two {}
]] parse fails

test multiple questions [[
	form questions {
		problems : "Does your car have problems?" boolean
		what     : "What is the problem?" string
	}
]] parse to
   Form("questions"
    , [ Question("problems", Label("\"Does your car have problems?\""), BoolTy())
      , Question("what", Label("\"What is the problem?\""), StringTy())
      ]
    )

test builtin types [[
	form questions {
		birthday : "When is your birthday?" date
		cats     : "How many cats do you own?" decimal
		bread    : "How much does a bread cost?" money
	}
]] parse to
    Form("questions"
    , [ Question("birthday", Label("\"When is your birthday?\""), DateTy())
      , Question("cats", Label("\"How many cats do you own?\""), DecimalTy())
      , Question("bread", Label("\"How much does a bread cost?\""), MoneyTy())
      ]
    )

test computed [[
  form nonempty {
    a : "question a" integer
    b : "questoin b" integer
    c : "sum of a and b" integer(a + b)
  }
]] parse to 
    Form(
      "nonempty"
    , [ Question("a", Label("\"question a\""), IntegerTy())
      , Question("b", Label("\"questoin b\""), IntegerTy())
      , Computed(
          "c"
        , Label("\"sum of a and b\"")
        , TExpr(IntegerTy(), Plus(Ref("a"), Ref("b")))
        )
      ]
    )

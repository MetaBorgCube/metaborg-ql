module qls/check

imports
	include/QL
	qls/styles
	qls/types
	lib/editor-common.generated
	utils
	qls/store
	lib/analysis-library
	dependencies
	
rules // generic
	
	constraint-warning = fail
	
	constraint-note = fail

rules // styles
	
	// typed widget declaration in style definition
	constraint-error: 
		|[type widget = widge ]| -> <qls-type-error(elem)> (type, widge)
	
	constraint-error:
		|[ define style sid { stydef* }]| -> (sid, $[Style [sid] has cyclic dependencies])
		where
			<qls-has-circular-dependency-style> sid
	
	constraint-error:
		|[ define style sid { stydef* }]| -> <concat> [dup-imports, dup-defs]
		where <not(qls-has-circular-dependency-style)> sid
		where <dup-imports-errors> stydef* => dup-imports
		where <dup-defs-errors> stydef* => dup-defs

	constraint-error:
		|[ qid { style* }]| -> <concat> [type-errors, dup-imports, dup-defs]
		where
			qls-type-of => q-type;
			<filter(?Widget(<id>))> style*;
			map(!(q-type, <id>));
			filter(qls-type-error(elem)) => type-errors
		where <dup-imports-errors> style* => dup-imports
		where <dup-defs-errors> style* => dup-defs

	dup-imports-errors =
		filter(?StyleRef(<id>));
		reverse;
		duplicates(eq, string-lt);
		map(!(<id>, $[Duplicate style use]))
	
	dup-defs-errors = 
		filter(not(?StyleRef(_))) => ss;
		reverse;
		make-set(is-same-style);
		<diff> (ss, <id>);
		map(!(<id>, $[Duplicate styling]))

rules // question ordering
	
	constraint-error:
		QLS(_,_) -> <map(qls-ref-precedence-error)> swap-pairs
			where
				collect-all(?FormRef(<id>)); make-set;
				mapconcat(qls-questions-of-form;make-set;sort-question-ids) => swap-pairs
	

rules // error reporter helpers
	
	qls-type-error(s): 
		(type, widget) -> (widget, $[Widget ([pp-widget]) cannot be used for type [pp-type]])
		where
			<qls-type-of> widget => widget-ty;
			<not(s)> (type, widget-ty);
			<pp-ql-string> widget => pp-widget;
			<pp-ql-string> type => pp-type

	qls-ref-precedence-error:
		(qid, dep) -> (quest, $[Question [qid] must be preceeded by question [dep]])
		where
			<index-get-data(|ReferenceAST())> qid => quest
			

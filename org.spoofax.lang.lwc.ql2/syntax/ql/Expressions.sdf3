module ql/Expressions

imports

	lexical/Common

templates
	
	Expr = <(<Expr>)> {bracket}
	
	Expr.Ref = <<ID>>
	
	Expr.Not	= <!<Expr>> 
	Expr.And	= <<Expr> && <Expr>> {left}
	Expr.Or	= <<Expr> || <Expr>> {left}
	
  Expr.Lt		= [[Expr] < [Expr]]  {non-assoc}
  Expr.Leq	= [[Expr] <= [Expr]] {non-assoc}
  Expr.Gt		= [[Expr] > [Expr]]  {non-assoc}
  Expr.Geq	= [[Expr] >= [Expr]] {non-assoc}
	Expr.Eq		= <<Expr> == <Expr>> {non-assoc}
	
	Expr.Plus  = <<Expr> + <Expr>> {left}
  Expr.Minus = <<Expr> - <Expr>> {left}        
  Expr.Mul   = <<Expr> * <Expr>> {left}
  Expr.Div  = <<Expr> / <Expr>> {left}
  
context-free priorities 

	Expr.Not > 
	{non-assoc: Expr.Lt Expr. Leq Expr.Gt Expr.Geq Expr.Eq } >
	{left: Expr.Mul Expr.Div } >
	{left: Expr.Plus Expr.Minus } >
	{left: Expr.And } >
	{left: Expr.Or }

templates

	Expr.True  = <true>
	Expr.False = <false>

	ID = "true"  {reject}
	ID = "false" {reject}

template options

	keyword -/- [a-zA-Z0-9\_]

module qls/normalize

imports
  include/QL
  ql/analysis/names
  qls/analysis/names
  lib/runtime/index/-
  lib/runtime/task/-
  lib/editor-common.generated
  lib/runtime/nabl/-
  lib/runtime/relations/-
  
  utils
  
rules
  
  builder-normalize-qls:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
      index-setup(|<language>, project-path);
      task-setup(|project-path)
    with
      filename := <guarantee-extension(|"normalize.qls.aterm")> path;
      result := <normalize-qls> ast
  
  normalize-qls =
  	normalize-styles-top;
  	normalize-question-references-top

rules /* style normalization */

  normalize-styles-top = alltd(normalize-styles)
  
  normalize-styles:
    StyleDef(sid, body*) -> StyleDef(sid, body'*)
    with
      body'* := <mapconcat(deep-normalize-styles <+ MkSingleton)> body*
  
  normalize-styles:
    Styles(s*) -> Styles(s'*)
    with
      s'* := <mapconcat(deep-normalize-styles <+ MkSingleton)> s*
  
  deep-normalize-styles:
    sref@StyleRef(sid) -> <get-sty-body; mapconcat(deep-normalize-styles <+ MkSingleton)> sref
  
  deep-normalize-styles:
    t -> [t]
    where <not(?StyleRef(_))> t

rules /* normalize question references */

  normalize-question-references-top:
    ast@QLS(style*, page*) -> <force-origins(!QLS(style*, [page'*, Page("\"Other questions\"", form-ref*, q-unused''*)]))> ast
    with
    	form-ref* := <collect-all(?FormRef(_))> ast;
    	q-defed* := <mapconcat(?FormRef(<id>); nabl-get-child-definitions(|NablNsQuestion()))> form-ref*;
    	q-used* := <collect-all(?StyledRef(<id>, _)); map(nabl-collect-one-resolved-def)> ast;
      q-unused* := <diff> (q-defed*, q-used*);
      (page'*, q-unused'*) := <safe-thread-alltd(normalize-question-references); bottomup(try(is-list; flatten-list))> (page*, q-unused*);
      q-unused''* := <map(question-def-to-ref)> q-unused'*
  
  normalize-question-references:
    (q-ref@StyledRef(qid, s), q-unused*) -> ([q-inject-ref*, q-ref], q-unused'*)
    with
      ( 
        q-dependency* := <nabl-uri; get-index-relations(|"<depends-on:"); insert-results-or-delay; map(nabl-collect-one-resolved-def)> qid
        <+
        q-dependency* := []
      );
      q-inject* := <isect> (q-dependency*, q-unused*);
      q-inject-ref* := <map(question-def-to-ref)> q-inject*;
      q-unused'* := <diff> (q-unused*, q-inject*)

  question-def-to-ref:
    t@Def(_) -> StyledRef(q-name{Use(t)}, Styles([]))
    with
      q-name := <nabl-uri; nabl-uri-name> t  
